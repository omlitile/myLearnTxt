常见的缓存淘汰策略有：
1.先进先出（FIFO）
2.最少使用（LFU）
3.最近最少使用（LRU）

实现：
对于先进先出策略，直接维护一个固定长度的队列即可。

对于最少使用策略，可以维护一个hash表，key是名称，value是次数，
当插入的元素大于hash表的大小的时候，就准备淘汰，遍历hash表，找到value的最小值，然后删除，再push进去。

对于最近最少使用策略，可以用链表实现。
维护一个单向链表，越靠近尾节点越是远古且不常用
    插入数据时：
        缓存已满，直接删除尾节点，将新数据插入头节点
        缓存不满：
            找到的该数据，删除原来的，在头节点加入
            找不到，直接在头节点加入