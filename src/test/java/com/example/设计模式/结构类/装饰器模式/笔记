概念：
    通常给对象添加功能，要么直接修改对象添加相应的功能，要么派生子类来扩展，抑或是使用对象组合的方式。
    显然，直接修改对应的类的方式并不可取，在面向对象的设计中，我们应该尽量使用组合对象而不是继承对象来扩展和复用功能，装饰器模式就是基于对象组合的方式的。
    装饰器模式以对客户端透明的方式动态地给一个对象附加上了更多的责任。
    换言之，客户端并不会角色对象在装饰前和装饰后有什么不同。装饰器模式可以在不用创建更多子类的情况下，将对象的功能加以扩展。


装饰模式主要包含以下角色：
    抽象构件（Component）角色：定义一个抽象接口以规范准备接收附加责任的对象。
    具体构件（Concrete    Component）角色：实现抽象构件，通过装饰角色为其添加一些职责。
    抽象装饰（Decorator）角色：继承抽象构件，并包含具体构件的实例，可以通过其子类扩展具体构件的功能。
    具体装饰（ConcreteDecorator）角色：实现抽象装饰的相关方法，并给具体构件对象添加附加的责任。